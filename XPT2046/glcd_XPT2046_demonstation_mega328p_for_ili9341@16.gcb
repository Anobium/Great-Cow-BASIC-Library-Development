'''A demonstration program for GCGB and GCB.
'''--------------------------------------------------------------------------------------------------------------------------------
'''This program is a simple GLCD demonstration of the ILI9341 GLCD with the XPT2046 Touch capabilities.
'''It is a nice graphical LCD, suitable for a lot of various projects.
'''This program shows the calibration of the touch with the specific GLCD.
'''The GLCD is connected to the microprocessor as shown in the hardware section of this code.
''':
'''This has been tested using the hardware and software SPI option.
''':
'''Note: for the correct operation of this display you MUST connect via a CD4050, see http://forum.arduino.cc/index.php?topic=181679.90
''':
'''@author
'''@licence GPL
'''@version 1.1
'''@date
'''********************************************************************************

    'Chip Settings.
    #chip mega328p, 16
    #option explicit

    #include <glcd.h>
    #include <xpt2046.h>
    #include <uno_mega328p.h >

    '******************************************************************************************************
    'Setup the GLCD

    #define GLCD_TYPE GLCD_TYPE_ILI9341

    'Pin mappings for SPI - this GLCD driver supports Hardware SPI and Software SPI
    #define GLCD_DC       DIGITAL_8           ' Data command line
    #define GLCD_CS       DIGITAL_10          ' Chip select line
    #define GLCD_RESET    DIGITAL_9           ' Reset line

    #define GLCD_DI       DIGITAL_12          ' Data in | MISO    - Not used therefore not really required
    #define GLCD_DO       DIGITAL_11          ' Data out | MOSI
    #define GLCD_SCK      DIGITAL_13          ' Clock Line
    #define ILI9341_HardwareSPI               ' remove/comment out if you want to use software SPI.

    '******************************************************************************************************
    'Setup the XPT2046

    'Typical calibration range for Hardware SPI when using XPT2046
    'for 320 * 240 screeen... may be different for others
    #define XPT2046XMIN   15
    #define XPT2046YMIN   15
    #define XPT2046XMAX   100
    #define XPT2046YMAX   115
    #define XPT2046_ReadSamples 5

    'Typical Calibration range for Software SPI when using XPT2046
'    #define XPT2046XMIN   30
'    #define XPT2046YMIN   25
'    #define XPT2046XMAX   210
'    #define XPT2046YMAX   225


    #define XPT2046_DI       DIGITAL_12          ' Data in | MISO
    #define XPT2046_DO       DIGITAL_11          ' Data out | MOSI
    #define XPT2046_SCK      DIGITAL_13          ' Clock Line
    #define XPT2046_CS       DIGITAL_2           ' Chip select line
    #define XPT2046_IRQ      ANALOG_5
    #define XPT2046_HardwareSPI                  ' remove/comment out if you want to use software SPI - must use same method as GLCD

    '******************************************************************************************************
    'Main program

    ScreenLayout

    'Set the initial calibration - shown here to show the method
    SetCalibation_XPT2046 ( XPT2046XMIN, XPT2046XMAX, XPT2046YMIN, XPT2046YMAX )

    do

      'always wait for touch event
      wait while isTouched_XPT2046

      'get the values
      GetXY_XPT2046( XTouchPoint_XPT2046, YTouchPoint_XPT2046 )

      if XTouchPoint_XPT2046 > 175 and  YTouchPoint_XPT2046 > 295 then
          if XTouchPoint_XPT2046 < 241 and  YTouchPoint_XPT2046 < 321 then
            'clear
            ScreenLayout
          end if
      else

          FilledCircle XTouchPoint_XPT2046, YTouchPoint_XPT2046, 3, TFT_LIGHTGREY

          'Show the raw data
          GLCDPrint ( 24, 56, pad(str(XTouchPoint_XPT2046raw),3 ) )
          GLCDPrint ( 24, 72, pad(str(YTouchPoint_XPT2046raw),3 ) )

          'Automatically adjust the values to min and max
          'Not needed in a real program use SetCalibation_XPT2046( XPT2046_Xmin, XPT2046_Xmax, XPT2046_Ymin, XPT2046_Ymax )
          if XTouchPoint_XPT2046raw < XPT2046_Xmin then XPT2046_Xmin = XTouchPoint_XPT2046raw
          if YTouchPoint_XPT2046raw < XPT2046_Ymin then XPT2046_Ymin = YTouchPoint_XPT2046raw
          if XTouchPoint_XPT2046raw > XPT2046_Xmax then XPT2046_Xmax = XTouchPoint_XPT2046raw
          if YTouchPoint_XPT2046raw  > XPT2046_Ymax then XPT2046_Ymax = YTouchPoint_XPT2046raw

          'show the values
          GLCDPrint ( 102, 56, pad(str(XPT2046_Xmin),3 ) )
          GLCDPrint ( 102, 72, pad(str(XPT2046_Ymin),3 ) )
          GLCDPrint ( 162, 56, pad(str(XPT2046_Xmax),3 ) )
          GLCDPrint ( 162, 72, pad(str(XPT2046_Ymax),3 ) )

          GLCDPrint ( 24, 230, pad(str(XTouchPoint_XPT2046),5 ))
          GLCDPrint ( 24, 246, pad(str(YTouchPoint_XPT2046),5 ))

          'do not hammer the touch
          wait 20 ms

      end if

    loop

sub ScreenLayout

        #define GLCD_OLED_FONT
        GLCDfntDefaultsize = 2
        GLCDFontWidth = 5
        GLCDRotate ( Portrait_Rev )
        'Layout the screen
        GLCDCLS
        GLCDPrint ( 2, 2, "XPT2046 demonstration 2018")
        line 0, 34, Current_GLCD_WIDTH, 34
        line 0, 140, Current_GLCD_WIDTH, 140
        line 0, 220, Current_GLCD_WIDTH, 220
        GLCDPrint ( 22, 25, "Dynamic Calibration")
        GLCDPrint ( 22, 40, "Raw    Min   Max")
        GLCDPrint ( 2, 56, "X:")
        GLCDPrint ( 2, 72, "Y:")
        GLCDPrint ( 22, 122, "Current Calibration")
        GLCDPrint ( 2, 146, "X:")
        GLCDPrint ( 2, 162, "Y:")
        GLCDPrint ( 102, 146, pad(str(XPT2046_Xmin),3 ) )
        GLCDPrint ( 102, 162, pad(str(XPT2046_Ymin),3 ) )
        GLCDPrint ( 162, 146, pad(str(XPT2046_Xmax),3 ) )
        GLCDPrint ( 162, 162, pad(str(XPT2046_Ymax),3 ) )
        GLCDPrint ( 22, 214, "Scaled")
        GLCDPrint ( 2, 230, "X:")
        GLCDPrint ( 2, 246, "Y:")

        GLCDfntDefaultsize = 1
        GLCDPrint ( 2, 310, "v0.9a")
        GLCDfntDefaultsize = 2

        filledbox 180, 300, 239, 319, TFT_WHITE
        GLCDBackground = TFT_WHITE
        GLCDPrint ( 182, 302, "Clear", TFT_BLACK )
        GLCDBackground = TFT_BLACK

End Sub
