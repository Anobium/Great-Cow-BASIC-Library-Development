''' Description  :
'''      this code sets LEDA as link status display using standard SPITRANSER
'''      and makes LEDB blink permamently
''' target devices :
'''      any PIC with integrated SPI on PORTC
'''      the ENC28J60 SPI plus CLK, SO, SI must be connected to the corresponding SPI pins of the PIC
'''      the INT and WOL signals from the ENC are not used

''' If LEDA is off and LEDB starts blinking, that is good news : the PIC can talk to the ENC controller through SPI communication.
''' If it does not, it should, check again your solderings & connections until it works.
'''
'''  Then connect your board to a hub with a straight cable : LEDA should now turn on with LEDB still blinking. LEDA on means that the adapter is correctly linked to the network. The network link LED of the other side hub should also turn on.

#Chip 18F4520, 20
#Config Osc = HS
#Config MCLRE = ON

' ----- Constants
#Define Heartbeat 			PortC.2
#Define ENC28J60_DI			PortC.4							'Connected to Device SO
#Define ENC28J60_DO			PortC.5							'Connected to Device SI
#Define ENC28J60_SCK		PortC.3							'Connected to Clock
#Define ENC28J60_CS 		PortA.5							'Chip select line
#Define ENC28J60_RESET  PortD.2							'Reset line
#Define TX 							PortC.7
#Define RX							PortC.6
#Define Delay 50 Ms

#define debugport portb.0
set debugport off

'USART settings
#Define USART_BAUD_RATE 9600
#Define USART_BLOCKING
#Define USART_TX_BLOCKING

Dir TX Out
Dir RX In


        wait 1 s
        HSerPrintCRLF 2
        HserPrint "ENC28J60 Ethernet Driver - Flash LED Test" : HSerPrintCRLF

        HserPrint "Init Test": HSerPrintCRLF
        PulseOut Heartbeat, 15 Ms


        #define ENC28J60_Select         Set ENC28J60_CS off
        #define ENC28J60_Deselect       Set ENC28J60_CS on
        #define ENC28J60_Reset_CMD			Set ENC28J60_RESET on: Wait 10 ms :Set ENC28J60_RESET off: Wait 10 ms :Set ENC28J60_RESET on: Wait 10 ms


        Dir ENC28J60_DI in
        Dir ENC28J60_DO Out
        Dir ENC28J60_SCK Out
        Dir ENC28J60_CS out
        Dir ENC28J60_RESET out

        'Initial state of ports required for SW SPI
        set ENC28J60_DO off
        set ENC28J60_SCK off
        set ENC28J60_CS off


        'Reset the NIC
        ENC28J60_Deselect
        SPIMode MasterFast, 0
        ENC28J60_Reset_CMD

          ' set ENC memory bank 2

        ENC28J60_Select
        SPITransfer ( ( BFCCMD | ECON1 ), temp )
        SPITransfer(0b00000001, temp )
        ENC28J60_Deselect

        ENC28J60_Select
        SPITransfer( BFSCMD | ECON1, temp )
        SPITransfer(0b00000010 , temp )
        ENC28J60_Deselect

        'Set address of PHY register to write
        ENC28J60_writeReg(MIREGADR, PHLCON)


        'Set LEDA for link status display
        'and LEDB for blink fast
        ENC28J60_writeReg(MIWRL, 0b10100010)
        ENC28J60_writeReg(MIWRH, 0b00000100)



        ; writes byte ENC_Outbyte in ENC register addr of the current bank
        sub ENC28J60_writeReg( in addr,  in ENC_Outbyte as byte )

                ENC28J60_Select
                SPITransfer( addr OR WCRCMD , temp )
                SPITransfer( ENC_Outbyte, temp )
                ENC28J60_Deselect
        end sub





' ENC SPI commands
#define WCRCMD  0b01000000      'write control register
#define BFCCMD  0b10100000      'bit field clear
#define BFSCMD  0b10000000      'bit field set
#define BFCCMD  0b10100000      'bit field clear

' ENC SFR
#define MIREGADR        0x14
#define ECON1           0x1f

#define PHLCON          0x14
#define MIWRL           0x16

'	ENC PHY register
#define MIWRH   0x17
