'''A demonstration program for GCGB and GCB.
'''--------------------------------------------------------------------------------------------------------------------------------
'''This program shows the real time clock on a LCD. The LCD is driven by a LCD I2C adapter.
'''Two types of LCD are supported using this method, as shown below:
''':        Set LCD_10 to 10 for the YwRobot LCD1602 IIC V1 or the Sainsmart LCD_PIC I2C adapter
''':        Set LCD_10 to 12 for the Ywmjkdz I2C adapter with pot bent over top of chip
'''The PCF8563 is attached to the I2C ports with appropiate resistors to the supply voltage.  Typically a 5k or 2.2k resistor 'pulling up' to the supply voltage can be used.
''':
''':    There are two pushbuttons: Mode and Set equates to Key1 and Key2. Connected to portb.0 and portb.1 resepectively.
''':
''':    During normal operation, the Mode button will toggle
''':    between 12- and 24-hours modes.
''':
''':    This has two modes US date and UK date style.
''':    Change ''':clocktype''': to 0 for US and 1 for UK
''':
''':    To set a new date and time, press the Set button
''':    which will take you consecutively to Month, Day, Year,
''':    Day of the Week, Hour, Minute and Second. Within each of
''':    these, press Mode to cycle through the possible values.
''':    You may hold the Mode button to increment automatically,
''':    or press momentarily for a single increment. Time is
''':    always set in 24-hour clock format.

'''@author          EvanV
'''@licence GPL
'''@version 1.2a
'''@date    23.02.15
'''********************************************************************************

; ----- Configuration
#chip 16f15376, 32
#option explicit

    'Generated by PIC PPS Tool for Great Cow Basic
    'PPS Tool version: 0.0.5.22
    'PinManager data: Not available (3)
    'Generated for 16F15376
    '
    'Template comment at the start of the config file
    '
    #startup InitPPS, 85
    #define PPSToolPart 16F15376

    Sub InitPPS

            'Module: MSSP1
            RB5PPS = 0x0016    'SDA1 > RB5
            SSP1DATPPS = 0x000D    'RB5 > SDA1 (bi-directional)
            RB7PPS = 0x0015    'SCL1 > RB7
            SSP1CLKPPS = 0x000F    'RB7 > SCL1 (bi-directional)
            'Module: EUSART1
            RB6PPS = 0x000F    'TX1 > RB6
    End Sub
    'Template comment at the end of the config file

 #include "PCF8563.h"
 #define DS_AddrWrite 0xA2
 #define DS_AddrRead  0xA3
  'USART settings
  #define USART_BAUD_RATE 9600
  #define USART_TX_BLOCKING


  '''Set up LCD
   #define LCD_IO 10
   #define LCD_I2C_Address_1 0x4C ; default to 0x4E
   'You may need to use SLOW or MEDIUM if your LCD is a slower device.
   #define LCD_SPEED FAST
   'You may need to invert these states. Dependent of LCD I2C adapter.
   #define LCD_Backlight_On_State  1
   #define LCD_Backlight_Off_State 0

; ----- Define Hardware settings for hwi2c
    ' Define I2C settings - CHANGE PORTS if required for your specific device.
    #define hi2c_BAUD_RATE 100
    #define hi2c_DATA PORTb.5
    #define hi2c_CLOCK PORTb.7
    'Initialise I2C Master
    'I2C pins need to be input for SSP2 module
    Dir hi2c_DATA in
    Dir hi2c_CLOCK in

; ------ CLC Settings


            'Module: CLC1/CLC2/CLC3/CLC4
            CLCIN2PPS = 0x0008    'RB0 > CLCIN2
            'Module: CLC2
            RC0PPS = 0x0002    'CLC2OUT > RC0

    RC0PPS = 0x02;   //RC0->CLC2:CLC2OUT;
    CLCIN0PPS = 0x00;   //RA0->CLC2:CLCIN0;
    CLCIN2PPS = 0x08;   //RB0->CLC2:CLCIN2;

DIR PORTC.0 OUT
    'Set the CLC2 to the options selected in the User Interface

    'LC2G1POL not_inverted; LC2G2POL not_inverted; LC2G3POL not_inverted; LC2G4POL not_inverted; LC2POL not_inverted;
    CLC2POL = 0x00;
    'LC2D1S CLCIN2 (CLCIN2PPS);
    CLC2SEL0 = 0x02;
    'LC2D2S CLCIN0 (CLCIN0PPS);
    CLC2SEL1 = 0x00;
    'LC2D3S CLCIN0 (CLCIN0PPS);
    CLC2SEL2 = 0x00;
    'LC2D4S CLCIN0 (CLCIN0PPS);
    CLC2SEL3 = 0x00;
    'LC2G1D3N disabled; LC2G1D2N disabled; LC2G1D4N disabled; LC2G1D1T enabled; LC2G1D3T disabled; LC2G1D2T disabled; LC2G1D4T disabled; LC2G1D1N disabled;
    CLC2GLS0 = 0x02;
    'LC2G2D2N disabled; LC2G2D1N disabled; LC2G2D4N disabled; LC2G2D3N disabled; LC2G2D2T disabled; LC2G2D1T disabled; LC2G2D4T disabled; LC2G2D3T disabled;
    CLC2GLS1 = 0x00;
    'LC2G3D1N disabled; LC2G3D2N disabled; LC2G3D3N disabled; LC2G3D4N disabled; LC2G3D1T disabled; LC2G3D2T disabled; LC2G3D3T disabled; LC2G3D4T disabled;
    CLC2GLS2 = 0x00;
    'LC2G4D1N disabled; LC2G4D2N disabled; LC2G4D3N disabled; LC2G4D4N disabled; LC2G4D1T disabled; LC2G4D2T disabled; LC2G4D3T disabled; LC2G4D4T disabled;
    CLC2GLS3 = 0x00;
    'LC2EN enabled; INTN disabled; INTP disabled; MODE OR-XOR;
    CLC2CON = 0x81;




; ----- Define Hardware settings
  dir setBut in
  dir modeBut in

  #define clocktype   1               ;0 is US or 1 is UK style
  #define debounce    50 mS            ;settling time for switches
  #define delay       150 mS          ;delay time for pushbutton
  #define pressed     1               ;flag for pressed pushbutton
  #define setBut      portb.0         ;Set pushbutton
  #define modeBut     portb.1         ;Mode pushbutton

  #define Alarm0 0x00                 ;a reference to the alarm 0
  #define Alarm1 0x01                 ;a reference to the alarm 1


;----- Variables

  Dim DAYSMAX, DAYSMAX as Byte
  dim changed as bit
  dim hour, min, sec, am_pm as byte
  dim oldsec as byte
  dim date, month, year, DOW as byte
  dim mode, Oldmode, dayMax as byte
  oldsec = 255                        ;      init value

;----- Tables

  table monthDays                     ;# of days in months
    31
    29                                ;leap years only
    31
    30
    31
    30
    31
    31
    30
    31
    30
    31
  end table

;----- Program

  LCDCursor CURSOROFF
  locate 0,0
  Print "PCF8563"
  locate 1,0
  Print "Great Cow Basic"
  wait 2 s
  CLS

'PCF8563_SetClock( 13, 45, 0, 19,20,12, 18)
PCF8563_ResetClock
PCF8563_EnableClockout ( 1 )
PCF8563_EnableClockoutFrequency ( CLKOUT_CTRL_REG_1_Hz )

locate 2,0

;Main body of program commences here.
  PCF8563_ReadDate(DOW, date, month, year)   ;get initial date

  do

    updateDisp                        ;show time and date
    if setBut = pressed then
      changeSetting                   ;change time and date
    end if

    if modeBut = pressed then
      changeMode                      ;12 or 24 hour mode
    end if

  loop
end
  ;----- Subroutines

  sub printTime
    if mode = 24 then
      if hour < 10 then               ;left pad with zero
        Print "0"
      end if
    end if
    Print hour

    Print ":"
    if min < 10 then                  ;left pad with zero
      Print "0"
    end if
    Print min

    Print ":"
    if sec < 10 then                  ;left pad with zero
      Print "0"
    end if
    Print sec

    if mode = 12 then                 ;Print a.m or p.m
      if am_pm then                   ;only in 12-hour mode
        Print " p.m. "
      else
        Print " a.m. "
      end if
    else
      Print "     "                   ;wipe out garbage
    end if
  end sub

  ;-----

  sub printDate
    select case DOW                   ;day of the week
      case 0:
        Print "Sun."
      case 1:
        Print "Mon."
      case 2:
        Print "Tue."
      case 3:
        Print "Wed."
      case 4:
        Print "Thu."
      case 5:
        Print "Fri."
      case 6:
        Print "Sat."
      case else
        Print str(DOW)+":"
    end select

    if clocktype = 0 then
      Print month
      Print "/"
      Print date
      Print "/20"                       ;make four-digit year
      if year < 10 then
        Print "0"
      end if
    else
      Print date
      Print "/"
      Print month
      Print "/20"                       ;make four-digit year
      if year < 10 then
        Print "0"
      end if
    end if
    Print year
    Print " "                        ;blank any garbage
  end sub

  ;-----

  sub updateDisp
    ;for best efficiency, date is only updated once a day
    PCF8563_ReadTime(hour, min, sec, am_pm)

    if oldsec <> sec then
'erv
    HSerPrint hour
    HSerSend 9
    HSerPrint min
    HSerSend 9
    HSerSend 9
    HSerPrint sec
    HSerSend 9
    HSerPrint am_pm
    HSerSend 9
    HSerPrint ">"

      if !(hour | min | sec) then       ;time to update
        PCF8563_ReadDate(DOW, date, month, year)

            HSerPrint DOW
    HSerSend 9
    HSerPrint date
    HSerSend 9
    HSerPrint month
    HSerSend 9
    HSerPrint year
    HSerPrintCRLF

      end if

      locate 0,0                        ;home the cursor
      printTime                         ;show time

      locate 1,0                        ;show the date
      printDate
      oldsec =  sec
    end if
  end sub

  ;-----

  sub changeSetting
    changed = false                   ;assume no change will be made
    PCF8563_ReadHourMode(Oldmode)      ;and the current mode
    mode = 24                         ;ensure the display is correct
    PCF8563_SetHourMode(24)            ;change settings in 24-hour mode

    do while setBut = pressed         ;wait for Set release
      wait debounce
    loop

    wait while ( setBut = pressed ) or ( modeBut = pressed )

    if clocktype = 0 then             ; handle US and UK clock type
       SetMonth
       SetDate
    else
       SetDate
       SetMonth
    end if
    SetYear

    ;***** Day of the Week

    cls
    Print "Set Weekday:"
    locate 1,0
    printDate

    do
      do while modeBut = pressed      ;Mode button held
        DOW++                         ;increment while pressed
        if DOW > 7 then               ;1 = Sunday, etc.
          DOW = 1
        end if

        locate 1,0                    ;Print updated display
        printDate
        wait while modeBut = pressed  ;wait for repeat
        changed = true                ;a change was made
      loop
    loop while setBut <> pressed

    do while setBut = pressed         ;wait for Set release
      wait debounce
    loop

    ;***** Hour

    cls
    Print "Set Hours:"
    locate 1,0
    if OldMode = 12 and am_pm then    ; make correction of AM_PM mode by adding 12 hours to handle mode changes
       hour = hour + 12
    end if

    printTime

    do
      do while modeBut = pressed      ;Mode button held
        hour++                        ;increment while pressed
        if hour > 23 then             ;remember, set in 24-hour mode
          hour = 0
        end if

        locate 1,0                    ;Print updated display
        printTime
        wait while modeBut = pressed  ;wait for repeat
        changed = true                ;a change was made
      loop
    loop while setBut <> pressed

    do while setBut = pressed         ;wait for Set release
      wait debounce
    loop

    ;***** Minutes

    cls
    Print "Set Minutes:"
    locate 1,0
    printTime

    do
      do while modeBut = pressed      ;Mode button held
        min++                         ;increment while pressed
        if min > 59 then              ;0 to 59 minutes
          min = 0
        end if

        locate 1,0                    ;Print updated display
        printTime
        wait while modeBut = pressed  ;wait for repeat
        changed = true                ;a change was made
      loop
    loop while setBut <> pressed

    do while setBut = pressed         ;wait for Set release
      wait debounce
    loop

    ;***** Second

    cls
    Print "Set Seconds:"
    locate 1,0
    printTime

    do
      do while modeBut = pressed      ;Mode button held
        sec++                         ;increment while pressed
        if sec > 59 then              ;0 to 59 seconds
          sec = 0
        end if

        locate 1,0                    ;Print updated display
        printTime
        wait while modeBut = pressed  ;wait for repeat
        changed = true                ;a change was made
      loop
    loop while setBut <> pressed

    do while setBut = pressed         ;wait for Set release
      wait debounce
    loop

    ;***** Execute the new settings

    if changed then
      cls
      Print "Press Set, or"
      locate 1,0
      Print "Mode to revert"

      do while (setBut <> pressed)          ;wait for the Set button
        wait debounce
        if ModeBut = pressed then
           cls                               ;clear last message
           PCF8563_SetHourMode(Oldmode)       ;restore current mode
           exit Sub                          ;do not set, exit set routine
        end if
      loop

      PCF8563_SetHourMode(24)                 ;change settings in 24-hour mode
      PCF8563_SetClock(hour, min, sec, DOW, date, month, year)
    end if

    do while (setBut = pressed)       ;wait for Set release
    loop

    wait debounce                     ;let it settle
    cls                               ;clear last message
    PCF8563_SetHourMode(Oldmode)      ;restore current mode
    PCF8563_EnableOscillator( true )  ;ensure the clock is running
    mode = Oldmode                    ;restore mode
  end sub

  ;-----

  sub changeMode
    PCF8563_SetHourMode(24)            ;change settings in 24-hour mode

    if mode = 12 then                 ;toggle between 12 and 24
      mode = 24
    else
      mode = 12
    end if

    PCF8563_SetHourMode(mode)          ;change to new mode

    do while modeBut = pressed        ;wait for a release
      wait debounce
    loop
  end sub

  sub setMonth
    ;***** Month
    cls
    Print "Set Month:"
    locate 1,0
    printDate

    do
      do while modeBut = pressed      ;Mode button held
        month++                       ;increment while pressed
        if month > 12 then
          month = 1
        end if

        locate 1,0                    ;Print updated display
        printDate
        wait while modeBut = pressed  ;wait for repeat
        changed = true                ;a change was made
      loop
      wait debounce
    loop while setBut <> pressed      ;Set moves you on

    readTable monthDays, month, daysMax

    do while setBut = pressed         ;wait for Set release
      wait debounce
    loop
  end Sub



  sub SetDate
    ;***** Date

    cls
    Print "Set Date:"
    locate 1,0
    printDate
    readTable monthDays, month, daysMax
    do
      do while modeBut = pressed      ;Mode button held
        date++                        ;increment while pressed
        if date > daysMax then        ;stay within legal days
          date = 1
        end if

        locate 1,0                    ;Print updated display
        printDate
        wait while modeBut = pressed  ;wait for repeatt
        changed = true                ;a change was made
      loop
      wait debounce
    loop while setBut <> pressed

    do while setBut = pressed         ;wait for Set release
      wait debounce
    loop
  end sub


  sub SetYear
    ;***** Year

    cls
    Print "Set Year:"
    locate 1,0
    printDate

    do
      do while modeBut = pressed      ;Mode button held
        year++                        ;increment while pressed
        if year > 99 then             ;this millennium only
          year = 0
        end if

        locate 1,0                    ;Print updated display
        printDate
        wait while modeBut = pressed  ;wait for repeat
        changed = true                ;a change was made
      loop
      wait debounce
    loop while setBut <> pressed

    do while setBut = pressed         ;wait for Set release
      wait debounce
    loop


  end sub
