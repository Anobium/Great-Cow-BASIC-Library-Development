'''
'''******************************************************************
'''  Lesson 14 - "Reversible with Interrupt"
'''
'''  This lesson combines all of the previous lessons in using the button to reverse the
'''  direction of rotation when the button is pressed using an Interrupt. The speed of rotation is controlled
'''  using the potentiometer.
'''
'''  The program needs to keep track of rotation direction and new code needs to be added
'''  to rotate in the other direction. Lesson 5 rotates right and checks for a '1' in the carry
'''  bit to determine when to restart the sequence. In Lesson 7, the program needs to rotate
'''  both ways and check for a '1' in bit 4 of the display when rotating to the left. When the
'''  '1' shows up in bit 4 of LATC, it will be re-inserted into bit  0 .
'''
'''
'''  LEDs will rotate at a speed that is proportional to the ADC value. The switch will toggle
'''  the direction of the LEDs
'''
'''  PIC: 16f18426,8
'''  Compiler: GCB
'''  IDE: GCB@SYN
'''
'''  Board: PICkit 2 Low Pin Count Demo Board
'''  Date: 29.5.2015
'''
''''''******************************************************************
''' See Low Pin Count Demo Board User's Guide for Lesson Information*
''''''*****************************************************************
'''


 #Chip 16f18426, 8
 #option explicit
 #config MCLRE_OFF

 #define PULL_UPS                                  'if this is uncommented, the trace under JP5 can be cut
                                                    'with no affect on the output
  #ifdef PULL_UPS
    'enable the weak pull-up for the switch
    WPUA2 = 1
  #endif

  #define  MAXADCREADINGFROMTHEPOT 4095

  Dim _DIRECTION as Byte

  #define SWITCH_DOWN         0
  #define SWITCH_UP           1

  #define LED_RIGHT           TRUE
  #define LED_LEFT            FAlSE

  #define SWITCH      PORTA.3

  dim mydelay as Word

  'start from the right to left
  _direction = LED_RIGHT

  dir portc out
  portc.3 = 1

  'Potentiamtor is connected to RA4...set as input
  dir porta.0 in

  'setup switch (SW1)
  dir porta.3 in

  'setup Interrupt
  IOCAN3 = 1
  On Interrupt PORTChange  Call DirChange

  do
      mydelay = ReadAD12 ( AN0 )
      mydelay = scale ( mydelay, 0, 0x0D3F, 1 , 20)
      do while ( mydelay <> 0 )
        mydelay--
        wait 20 ms
      loop

      if  _direction = LED_RIGHT  then
          'shift to the right by 1
          Set C off
          Rotate portc right

          ' when the last LED is lit, restart the pattern
          if C = 1 then
             portc.3 = 1
          end if

      else
          'shift to the left by 1
          Set C off
          Rotate portc left

          'when the last LED is lit, restart the pattern
          if  portC.4 = 1 then
                portC.0 = 1
                portC.4 = 0
          end if
      end if

  loop

sub DirChange

 if IOCAF3 = 1 then

     IOCIE  = 0  ' Disable Port Change Interruts to Prevent renter of the same event
     IOCAF3 = 0  ' Ackowlage the Interrupt by Clearing this Flag
     _direction = !_direction ; Reverse direction
     IOCIE = 1  ' Reenable Port change interrupts
   end if

end sub