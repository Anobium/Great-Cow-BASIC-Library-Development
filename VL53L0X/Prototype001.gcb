'''
'''
'''
'''
'''
'''
'''
'''
'''
'''
'''
'''
'''
'''
'''
'''
'''
'''
'''
'''
'''
'''
'''
'''
'''
'''@author
'''@licence
'''@version
'''@date
'''********************************************************************************

; ----- Configuration
      #chip mega328p,16
      #option explicit

; ----- Define Hardware settings
      ' Define I2C settings
      #define HI2C_BAUD_RATE 400
      #define HI2C_DATA PORTC.5
      #define HI2C_CLOCK PORTC.4
      'I2C pins need to be input for SSP module when used on Microchip device, so, uncomment if you port to a PIC
    '  Dir HI2C_DATA in
    '  Dir HI2C_CLOCK in
      HI2CMode Master

     ' THIS CONFIG OF THE SERIAL PORT WORKS WITH A  MAX232 (or equiv) THEN TO PC
     ' USART settings - CHANGE PORTS if required
     #define USART_BAUD_RATE 9600
     Dir PORTc.6 Out
     Dir PORTc.7 In
     #define USART_DELAY 5 ms
     #define SerSendDelayms 10
     #define USART_BLOCKING


'''********************************************************************************
    'Wait post programming to connect terminal to USB port
    wait 2500 ms
    HSerPrintCRLF
    HSerPrint "Test sensor VL53L0x v20/02/19 by Anobium"
    HSerPrintCRLF 1

'    #startup init_verVL53, 100

        HSerPrint "               Default      From Device"
        HSerPrintCRLF
    rd_byte_verVL53( VL53Dev, 0xC2, VL52ByteValue )
        HSerPrint "Revision ID     0x10           0x"
        HSerPrint hex(VL52ByteValue)
        HSerPrintCRLF

    rd_byte_verVL53( VL53Dev, 0xC0, VL52ByteValue )
        HSerPrint "Device ID       0xEE           0x"
        HSerPrint hex(VL52ByteValue)
        HSerPrintCRLF

    rd_byte_verVL53( VL53Dev, 0xC1, VL52ByteValue )
        HSerPrint "Address 0xC1    0xAA           0x"
        HSerPrint hex(VL52ByteValue)
        HSerPrintCRLF

    rd_word_verVL53( VL53Dev, 0x51, VL52WordValue )
        HSerPrint "Address 0x51    ????           0x"
        HSerPrint hex(VL52WordValue_h)
        HSerPrint hex(VL52WordValue)
        HSerPrintCRLF

    rd_word_verVL53( VL53Dev, 0x61, VL52WordValue )
        HSerPrint "Address 0x61    ????           0x"
        HSerPrint hex(VL52WordValue_h)
        HSerPrint hex(VL52WordValue)
        HSerPrintCRLF




    #define VL53Dev 0x52
    dim VL52ByteValue as byte
    dim VL52WordValue as word


    sub init_verVL53

    end sub

    sub rd_byte_verVL53( in VL53Dev as byte, in VL53Addr as byte, out VL53ByteVal as byte )
      ;read a single byte from an address
      #ifdef HI2C_DATA
          do
            HI2CReStart                              ;generate a start signal
            HI2CSend(VL53Dev)                       ;inidcate a write
          loop While HI2CAckPollState
          HI2CSend(VL53Addr)
          HI2CReStart
          HI2CSend(VL53Dev or 1)                   ;set the read flag
          HI2CReceive(VL53ByteVal, NACK)           ;read one byte and conclude
          HI2CStop
      #endif

      #ifdef I2C_DATA
          I2CStart                              ;generate a start signal
          I2CSend(VL53Dev)                       ;inidcate a write
          I2CSend(VL53Addr)
          I2CReStart
          I2CSend(VL53Dev or 1)                   ;set the read flag
          I2CReceive(VL53ByteVal, NACK)           ;read one byte and conclude
          I2CStop
          I2CAckPoll(VL53Dev)                ;wait for buffer write
      #endif

    end sub


    sub rd_word_verVL53( in VL53Dev as byte, in VL53Addr as byte, out VL53WordVal as word )
      ;read a single byte from an address
      #ifdef HI2C_DATA
          do
            HI2CReStart                              ;generate a start signal
            HI2CSend(VL53Dev)                       ;inidcate a write
          loop While HI2CAckPollState
          HI2CSend(VL53Addr)
          HI2CReStart
          HI2CSend(VL53Dev or 1)                   ;set the read flag
          HI2CReceive(VL53WordVal_h)           ;read one byte and conclude
          HI2CReceive(VL53WordVal, NACK)           ;read one byte and conclude
          HI2CStop
      #endif

      #ifdef I2C_DATA
          I2CStart                              ;generate a start signal
          I2CSend(VL53Dev)                       ;inidcate a write
          I2CSend(VL53Addr)
          I2CReStart
          I2CSend(VL53Dev or 1)                   ;set the read flag
          I2CReceive(VL53WordVal_h)           ;read one byte and conclude
          I2CReceive(VL53WordVal, NACK)           ;read one byte and conclude
          I2CStop
          I2CAckPoll(VL53Dev)                ;wait for buffer write
      #endif

    end sub
