'''A demonstration program for Explicit-Paper.
 '''-------------------------------------------------------------------------
' -------------------------------------------------------
 '''This has been tested using the hardware and software SPI option.

 '''*************************************************************************
' *******

     'Chip Settings.
     #define clock_freq 64
     #chip 18F47k42, clock_freq
     #config MCLRE = ON
     #option explicit
     '
     'Generated by PIC PPS Tool for Great Cow Basic
     'PPS Tool version: 0.0.5.25
     'PinManager data: Not available (3)
     'Generated for 18f25k42
     '
     'Template comment at the start of the config file
     '
     #startup InitPPS, 85
     #define PPSToolPart 18F45k42
     Sub InitPPS
         'This has been added to turn off PPS SPI when in SPI software mode
             'Module: UART1  (0x.... è in ESADECIMALE)
             U1RXPPS = 0x0017        'RC7 > RX1
             RC6PPS  = 0x0013        'TX1 > RC6
             #ifdef EPD2in13D_HardwareSPI
                 'Module: SPI1
                 SPI1SDIPPS = 0x0014     'RC4 > SDI1
                 RC5PPS = 0x001F         'SDO1 > RC5
                 RC3PPS = 0x001E         'SCK1 > RC3
                 SPI1SCKPPS = 0x0013     'RC3 > SCK1 (bi-directional)
             #endif
     End Sub

 '______________
 '   USART
     #define USART_BAUD_RATE 57600'9600
     #define USART_DELAY     5 ms
     #define USART_BLOCKING
     'Set pin USART directions
     Dir portC.7 IN
     Dir portC.6 OUT

 '******************************************************************************************************
 '  The following should be used   '#define EPD_EPD2in13D_HardwareSPI     'remove comment out if you want to use software SPI.
     #define EPD2in13D_HardwareSPI
     #define SD_HardwareSPI
     #define SPI_BAUD_RATE_REGISTER 7 '**********||||||****|||****|

 '***************************************************************************
' ***************************

    'Setup the E-Paper
     #include "Sertxd.h"
     #include <glcd.h>
     #include "MySDLib.h"
'     #include <xpt2046.h>    'include per il touch driver di ili9341
     #define GLCD_TYPE GLCD_TYPE_EPD_EPD2in13D
     #define GLCD_EXTENDEDFONTSET1

'     NONE GLCD_TYPE_EPD2in13D_LOWMEMORYx_GLCD_MODE def.==>'BuffWidth=2756,n_page=1
'     #define GLCD_TYPE_EPD2in13D_LOWMEMORY1_GLCD_MODE ON  'BuffWidth=13,  n_page=212
'     #define GLCD_TYPE_EPD2in13D_LOWMEMORY2_GLCD_MODE ON  'BuffWidth=104, n_page=26
     #define GLCD_TYPE_EPD2in13D_LOWMEMORY3_GLCD_MODE ON  'BuffWidth=208, n_page=13
'     #define GLCD_TYPE_EPD2in13D_LOWMEMORY4_GLCD_MODE ON  'BuffWidth=1378,n_page=2

     'Pin mappings for SPI - this GLCD driver supports Hardware SPI and Software SPI

 'ERV These need to GLCD_DC ETC = was wrong naming convention
     #define GLCD_DC     portA.0   ' Data(hight)/ command(low) line
     #define GLCD_CS     portC.1   ' Chip select line (negate)
     #define GLCD_RESET  portD.2   ' Reset line       (negate)
     #define GLCD_DO     portC.5   ' GLCD MOSI connect to MCU SDO
     #define GLCD_SCK    portC.3   ' Clock Line
     #define GLCD_Busy   portC.0   ' Busy Line

'--------------*-----------------*------------------*-----------------*--
    'Setup SD pins (sono presenti sia l'EPD2in13D card adapter che
    '                                un HW SD Card Adapter chip)

    #define SD_Adaper_CS  portD.7   ' SD-Adapter select line
    #define SD_DO         portC.5   ' MOSI connect to MCU SDO
    #define SD_SCK        portC.3   ' Clock Line
    #define SD_DI         portC.4   ' MISO connect to MCU SDI
    Dir     SD_Adaper_CS  OUT
    Dir     SD_DO         OUT
    Dir     SD_SCK        OUT
    Dir     SD_DI         IN


'    GLCDRotate ( Landscape_rev )     ' optionally you can rotate the screen.

    Dim Inf_Addr_Buff, SDBuff_ind  as word
    Dim Main_counter, Main_Counter1, Main_Counter2, Main_Counter3 as Word
    Dim Main_Ind, Main_Ind_trans as word
    Dim Main_MyString, Main_MyString1 as String


 '******************************************************************************************************
     'Main program


    dim upperPage, lowerPage as Byte
    upperPage = 0
    lowerPage = EPD_N_PAGE-1

    SET SD_Adaper_CS ON
    SET GLCD_CS ON



HSERPRINT "initialization"; HSerPrintCRLF

      CallCMD0                      'Card Initialization

HSERPRINT "CMD0 Executed"

      SET SD_Adaper_CS ON
      SET GLCD_CS OFF

      GLCD_Open_PageTransaction ( upperPage, lowerPage )

      Box_example

      GLCD_Close_PageTransaction                 'Close Transaction

End



sub Box_example
        box 10, 10,GLCD_WIDTH-10, GLCD_HEIGHT-10
        box 20, 20,GLCD_WIDTH-20, GLCD_HEIGHT-20
        box 30, 30,GLCD_WIDTH-30, GLCD_HEIGHT-30
        Filledbox 40, 40,GLCD_WIDTH-40, GLCD_HEIGHT-40
end sub
