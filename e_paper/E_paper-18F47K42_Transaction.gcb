'''A demonstration program for Explicit-Paper.
'''--------------------------------------------------------------------------------------------------------------------------------
'''This has been tested using the hardware and software SPI option.

'''********************************************************************************

    'Chip Settings.
    #define clock_freq 64
    #chip 18F47k42, clock_freq
    #config MCLRE = ON
    #option explicit
    '
    'Generated by PIC PPS Tool for Great Cow Basic
    'PPS Tool version: 0.0.5.25
    'PinManager data: Not available (3)
    'Generated for 18f25k42
    '
    'Template comment at the start of the config file
    '
    #startup InitPPS, 85
    #define PPSToolPart 18F45k42
    Sub InitPPS
        'This has been added to turn off PPS SPI when in SPI software mode
            'Module: UART1  (0x.... è in ESADECIMALE)
            U1RXPPS = 0x0017        'RC7 > RX1
            RC6PPS  = 0x0013        'TX1 > RC6
            'Module: SPI1
            SPI1SDIPPS = 0x0014     'RC4 > SDI1
            RC5PPS = 0x001F         'SDO1 > RC5
            RC3PPS = 0x001E         'SCK1 > RC3
            SPI1SCKPPS = 0x0013     'RC3 > SCK1 (bi-directional)
    End Sub

'______________
'   USART
    #define USART_BAUD_RATE 57600'9600
    #define USART_DELAY     5 ms
    #define USART_BLOCKING
    'Set pin USART directions
    Dir portC.7 IN
    Dir portC.6 OUT

'******************************************************************************************************
'  The following should be used   '#define EPD_EPD2in13D_HardwareSPI     ' remove comment out if you want to use software SPI.
    #define EPD2in13D_HardwareSPI
    #define SPI_BAUD_RATE_REGISTER 7 '**********||||||****|||****|

'******************************************************************************************************


    'Setup the E-Paper
'erv - You need to MIGRATE the GLCD.H I sent you. There are many changes that you need to test against.
    #include <Myglcd_trans.h>
    #include <EPD_EPD2in13D_trans.h>

    GLCDDeviceHeight = 102
    GLCDDeviceWidth  = 212

    #define GLCD_TYPE_EPD2in13D_CHARACTER_MODE_ONLY
    #define GLCD_TYPE_EPD2in13D_LOWMEMORY4_GLCD_MODE

'erv IS GLCD_WIDTH8 A CONSTANT?
    #define GLCD_WIDTH8  GLCD_WIDTH / 8

    'Pin mappings for SPI - this GLCD driver supports Hardware SPI and Software SPI

'ERV These need to GLCD_DC ETC = was wrong naming convention
    #define GLCD_DC     portA.0   ' Data(hight)/ command(low) line
    #define GLCD_CS     portC.1   ' Chip select line
    #define GLCD_RESET  portD.2   ' Reset line
    #define GLCD_DO     portC.5   ' GLCD MOSI connect to MCU SDO
    #define GLCD_SCK    portC.3   ' Clock Line
    #define GLCD_Busy   portC.0


    #define GLCD_TYPE EPD_EPD2in13D
    #define GLCD_EXTENDEDFONTSET1

'    GLCDRotate ( Landscape_rev )     ' optionally you can rotate the screen.

    '______________


    '******************************************************************************************************
    'Main program
    'Terminal commands
    #define ESC   chr(27)               'pag 530 manuale GCB
    #define CLS   HSerPrint(ESC+"[2J")
    #define CLS_CoolTerm hserprint CHR(12)
    #define HOME  HSerPrint(ESC+"[H")
    '_______________

    CLS_CoolTerm
    wait 100 ms

    Dim ind, counter, ind_raw, ind_col as word
    Dim Data, dummy, Flag, VERBOSE as byte
    Dim x_min, x_max, y_min, y_max as Word
    Dim BuffWidth as Word
    Dim n_page as byte
    Dim MyString, MyString1 as String

Main:
'______________________________________________________________________







    VERBOSE=0

'ERV NO!!!! In the init
'    Reset_EPD2in13D

    wait 200 ms
'ERV cALL AUTOMATCALLY FROM THE .H
'    Init_EPD2in13D

'ERV cALL AUTOMATCALLY FROM THE .H
    'Clear_EPD2in13D
'    GLCDCLS

PSET 0, 0, 1


'
'
''    DisplayGrid_EPD2in13D
'    HSerGetString MyString
'
'    if MyString="g" then
'      Grafica
'    else if MyString="t" then
'      Testo
'    else
'      BigTesto
'    end if
'
'
'    Sleep_EPD2in13D
'
'    HSerGetString MyString
'    if MyString="s" then
'     goto main
'    end if
'End
'
'sub DisplayGrid_EPD2in13D
'
'    SendCommand_EPD2in13D(Data_Trasmission_1)
'    wait 2 ms
'    for ind_raw=1 to GLCD_HEIGHT
'      for ind_col=1 to GLCD_WIDTH
'        SendData_EPD2in13D(Foreground)
'      next
'    next
'    wait 10 ms
'    SendCommand_EPD2in13D(Data_Trasmission_2)
'    wait 2 ms
'    counter=0
'    ind=GLCD_HEIGHT*GLCD_WIDTH8
'    for ind_raw=1 to ind
'       counter=counter+1
'       if counter>=105 and counter <117  then
'        SendData_EPD2in13D(TFT_Black)
'       else if counter=117 then
'        SendData_EPD2in13D(TFT_Black)           'ogni bit basso
'        counter=0
'       else
'        SendData_EPD2in13D(0xFE)           'solo primo bit basso
'       end if
'    next
'    wait 10 ms
'
'    Refresh_EPD2in13D
'
'end sub
'
'sub   DisplayPixels_EPD2in13D( in mode as byte)
'
'    if mode = 1 then
'      SendCommand_EPD2in13D(Data_Trasmission_1)
'      wait 2 ms
'      for ind_raw=1 to GLCD_HEIGHT
'        for ind_col=1 to GLCD_WIDTH
'          SendData_EPD2in13D(GLCDBackground)
'        next
'      next
'      wait 10 ms
'
'    SendCommand_EPD2in13D(Data_Trasmission_2)
'    wait 2 ms
'    end if
'
'    ind=BuffWidth
'    for ind_raw=1 to ind
'      SendData_EPD2in13D(EPD_Buffer(ind_raw))
'    next
'    wait 10 ms
'
''    Refresh_EPD2in13D
'
'
'end sub
'
'
'sub   Testo
'
'    Flag=0
'    Clear_EPD2in13D
'
'    GLCD_Open_PageTransaction_EPD2in13D (0, n_Page-1)
'
'    Clear_Buffer
'
'    Make_Buffer_Text(2,2,"Caso Probabile")
'    Make_Buffer_Text(2,12,"perché la rela")
'    Make_Buffer_Text(2,22,"zione non era")
'    Make_Buffer_Text(2,32,"attendibile.")
'    Make_Buffer_Text(2,42,"Comunque la ")
'    Make_Buffer_Text(2,52,"nuova versione")
'    Make_Buffer_Text(2,62,"darà risultati")
'    Make_Buffer_Text(2,72,"migliori?")
'    Make_Buffer_Text(2,108,"Seconda Parte")
'    Make_Buffer_Text(2,118,"dello schermo")
'    Make_Buffer_Text(2,128,"con un buffer")
'    Make_Buffer_Text(2,138,"ridotto. Si può")
'    Make_Buffer_Text(2,148,"anche disegnare")
'    Make_Buffer_Text(2,158,"fig. geometriche")
'
'    GLCD_Close_PageTransaction_EPD2in13D
'
'    Refresh_EPD2in13D
'
'end sub
'
'sub   BigTesto
'
'    Flag=0
'    Clear_EPD2in13D
'
'    GLCD_Open_PageTransaction_EPD2in13D (0, n_Page-1)
'
'    Clear_Buffer
'
'    Make_Buffer_BigTest(2,2, " Vela ")
'    Make_Buffer_BigTest(2,18," MARE ")
'    Make_Buffer_BigTest(2,34," Cielo")
'    Make_Buffer_BigTest(2,50," Verde")
'    Make_Buffer_BigTest(2,66," Luce ")
'    Make_Buffer_BigTest(2,82," BIANCO")
'    Make_Buffer_BigTest(2,108,"Nuovo")
'    Make_Buffer_BigTest(2,124,"II Parte")
'    Make_Buffer_BigTest(2,140,"schermo")
'    Make_Buffer_BigTest(2,156,"ridotto ")
'    Make_Buffer_BigTest(2,172,"disegna")
'    Make_Buffer_BigTest(2,188,"cerchio")
'
'    GLCD_Close_PageTransaction_EPD2in13D
'
'    Refresh_EPD2in13D
'
'end sub
'sub   Grafica
'
''   type=1 Filled Box
''        2 Filled circle
''        3 Round rectangle
''        4 Round Ellipse
''        5 Hyperbole
''        6 Parabole
'
'    Flag=0
'    Clear_EPD2in13D
'
'    GLCD_Open_PageTransaction_EPD2in13D (0, n_Page-1)
'
'    Clear_Buffer
'
'    Make_Buffer_Graf( 4, 4,42, 42,0,0,1, GLCDForeground)'Filled Rectangle
'    Make_Buffer_Graf( 5, 5,41, 41,0,0,1, GLCDBackground)' 4+2 input
'    Make_Buffer_Graf( 6, 6,40, 40,0,0,1, GLCDForeground)'2 inputs dummy
'    Make_Buffer_Graf( 7, 7,39, 39,0,0,1, GLCDBackground)
'    Make_Buffer_Graf( 8, 8,38, 38,0,0,1, GLCDForeground)
'    Make_Buffer_Graf( 9, 9,37, 37,0,0,1, GLCDBackground)
'    Make_Buffer_Graf(10,10,36, 36,0,0,1, GLCDForeground)
'    Make_Buffer_Graf(11,11,35, 35,0,0,1, GLCDBackground)
'    Make_Buffer_Graf(12,12,34, 34,0,0,1, GLCDForeground)
'    Make_Buffer_Graf(13,13,33, 33,0,0,1, GLCDBackground)
'    Make_Buffer_Graf(14,14,32, 32,0,0,1, GLCDForeground)
'    Make_Buffer_Graf(15,15,31, 31,0,0,1, GLCDBackground)
'
'    Make_Buffer_Graf(77,25,23,0,0,0,2,GLCDForeground)'Filled Circle
'    Make_Buffer_Graf(77,25,19,0,0,0,2,GLCDBackground)'3+2 inputs
'    Make_Buffer_Graf(77,25,14,0,0,0,2,GLCDForeground)'3 inputs dummy
'    Make_Buffer_Graf(77,25,11,0,0,0,2,GLCDBackground)
'    Make_Buffer_Graf(77,25,5 ,0,0,0,2,GLCDForeground)
'    Make_Buffer_Graf(77,25,2 ,0,0,0,2,GLCDBackground)
'
'    Make_Buffer_Graf(25,60,16,8,0,0,4,GLCDForeground)'Filled Ellipse
'    Make_Buffer_Graf(25,60,14,7,0,0,4,GLCDBackground)'4+2 inputs
'    Make_Buffer_Graf(25,60,12,6,0,0,4,GLCDForeground)'2 inputs dummy
'    Make_Buffer_Graf(25,60,10,5,0,0,4,GLCDBackground)
'    Make_Buffer_Graf(25,60,8,4, 0,0,4,GLCDForeground)
'    Make_Buffer_Graf(25,60,6,3,0,0, 4,GLCDBackground)
'
'    Make_Buffer_Graf(50,50,100,100,0,0,3, GLCDForeground)'Filled rounded
'    Make_Buffer_Graf(55,55,95,95,  0,0,3, GLCDBackground)'Rectangles
'    Make_Buffer_Graf(60,60,90,90,  0,0,3, GLCDForeground)'4+2 inputs
'    Make_Buffer_Graf(65,65,85,85,  0,0,3, GLCDBackground)'2 inputs dummy
'    Make_Buffer_Graf(70,70,80,80,  0,0,3, GLCDForeground)
'    Make_Buffer_Graf(75,75,75,75,  0,0,3, GLCDBackground)
'    Make_Buffer_Graf(80,80,80,80,  0,0,3, GLCDForeground)
'
'    Make_Buffer_Graf(25,70,2,102,  46,102,6, GLCDForeground)'Filled Triangle
'    Make_Buffer_Graf(25,78,10,98,  38,98, 6, GLCDBackground)'Filled Triangle
'    Make_Buffer_Graf(25,86,18,94,  30,94, 6, GLCDForeground)'Filled Triangle
'
'    Make_Buffer_Graf( 8, 108,90, 148,0,0,1,GLCDForeground)'filled rectangle
'    Make_Buffer_Graf(18,118,80, 136,0,0,1, GLCDBackground)'4+2 inputs
'    Make_Buffer_Graf(28,128,70, 126,0,0,1, GLCDForeground)'2 inputs dummy
'
'    Make_Buffer_Graf(50,181, 4, 2, 0,0,5, GLCDForeground)'Hyperbole
'    Make_Buffer_Graf(50,181, 6, 3, 0,0,5, GLCDBackground)'4+2 inputs
'    Make_Buffer_Graf(50,181,10, 5, 0,0,5, GLCDForeground)'2 inputs dummy
'    Make_Buffer_Graf(50,181,14, 7, 0,0,5, GLCDBackground)
'    Make_Buffer_Graf(50,181,18, 9, 0,0,5, GLCDForeground)
'    Make_Buffer_Graf(50,181,22,11, 0,0,5, GLCDBackground)
'    Make_Buffer_Graf(50,181,26,13, 0,0,5, GLCDForeground)
'    Make_Buffer_Graf(50,181,30,15, 0,0,5, GLCDBackground)
'    Make_Buffer_Graf(50,181,34,17, 0,0,5, GLCDForeground)
'
'    GLCD_Close_PageTransaction_EPD2in13D
'
'    Refresh_EPD2in13D
'
'end sub
'
'sub Make_Buffer_Text(in x0 as Word, in y0 as Word, in string_in as String)
'
'    DrawString_EPD2in13D(x0,y0,String_in)   'costruisce il nuovo buffer
'
'end sub
'
'sub Make_Buffer_BigTest(in x0 as Word, in y0 as Word, in string_in as String)
'
'    BigPrint_EPD2in13D(x0,y0,String_in)   'costruisce il nuovo buffer
'
'end sub
'
'sub Make_Buffer_Graf(in x_min as Word, in y_min as Word, in x_max as Word, in y_max as Word, in xx3 as word, in yy3 as word, in Type as byte, in LineColor as Word)
'
'    Dim x0, y0, a_x, b_y, radius as word
'
'    Select Case Type
'    case 1
'      FilledBox_EPD2in13D(x_min, y_min, x_max, y_max, LineColor)
'    case 2
'      x0=x_min: y0=y_min: radius=x_max
'      FilledCircle(x0, y0, radius, LineColor)  'center and radius
'    case 3
'      FillRoundRect(x_min, y_min, x_max, y_max, LineColor)
'    case 4
'      x0=x_min: y0=y_min: a_x=x_max: b_y=y_max
'      FilledEllipse(x0, y0, a_x, b_y, LineColor)
'    case 5
'      x0=x_min: y0=y_min: a_x=x_max
'      Hyperbole(x0, y0, a_x, b_y, 1, 1, LineColor)
'    case 6
'      FilledTriangle(x_min, y_min, x_max, y_max, xx3, yy3, LineColor)
'    End Select
'
'end sub
'
'sub Clear_Buffer
'    for ind_raw=1 to BuffWidth                 'ripulisce il buffer
'      EPD_Buffer(ind_raw)=GLCDBackground
'    next
'end sub
